
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='918.000'
     height='943.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='172.000'
                  width='646.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.util.internal.HashImpl'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='646.000'
                          height='172.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='646.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='299.000'
                          y='13.000'>HashImpl</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='646.000'
                          y2='45.000'
                          class='separator'/>
                    <text y='30.000'
                          class='final'>- m_HashValue:byte[]</text>
                    <text y='41.000'
                          class='static final'>- serialVersionUID:long</text>
                    <text x='5.000'
                          y='58.000'>+ HashImpl(hashValue:byte[])</text>
                    <text x='5.000'
                          y='69.000'>+ bytes():byte[]</text>
                    <text x='5.000'
                          y='80.000'>+ clone():org.tquadrat.foundation.util.internal.HashImpl</text>
                    <text x='5.000'
                          y='91.000'
                          class='static'>+ create(data:byte[],algorithm:java.util.zip.Checksum):org.tquadrat.foundation.util.internal.HashImpl</text>
                    <text x='5.000'
                          y='102.000'
                          class='static'>+ create(data:java.nio.file.Path,algorithm:java.util.zip.Checksum):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='113.000'
                          class='static'>+ create(data:byte[],algorithm:java.security.MessageDigest):org.tquadrat.foundation.util.internal.HashImpl</text>
                    <text x='5.000'
                          y='124.000'
                          class='static'>+ create(data:java.nio.file.Path,algorithm:java.security.MessageDigest):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='135.000'>+ equals(o:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='146.000'
                          class='static'>+ from(hashValue:java.lang.CharSequence):org.tquadrat.foundation.util.internal.HashImpl</text>
                    <text x='5.000'
                          y='157.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='168.000'>+ toString():java.lang.String</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000003'>
            <rect class='otherClass'
                  height='249.000'
                  width='868.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.util.Hash'>
            <g>
                <g clip-path='url(#ID000003)'>
                    <rect x='0.000'
                          y='0.000'
                          width='868.000'
                          height='249.000'
                          class='otherClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='868.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='407.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='422.000'
                          y='24.000'
                          class='abstract'>Hash</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='868.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'
                          class='abstract'>+ bytes():byte[]</text>
                    <text x='5.000'
                          y='69.000'
                          class='abstract'>+ clone():org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='80.000'
                          class='abstract static'>+ create(data:byte[],algorithm:java.util.zip.Checksum):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='91.000'
                          class='abstract static'>+ create(data:java.lang.CharSequence,algorithm:java.util.zip.Checksum):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='102.000'
                          class='abstract static'>+ create(data:java.lang.CharSequence,encoding:java.nio.charset.Charset,algorithm:java.util.zip.Checksum):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='113.000'
                          class='abstract static'>+ create(data:java.io.File,algorithm:java.util.zip.Checksum):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='124.000'
                          class='abstract static'>+ create(data:java.nio.file.Path,algorithm:java.util.zip.Checksum):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='135.000'
                          class='abstract static'>+ create(data:byte[],algorithm:java.security.MessageDigest):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='146.000'
                          class='abstract static'>+ create(data:java.lang.CharSequence,algorithm:java.security.MessageDigest):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='157.000'
                          class='abstract static'>+ create(data:java.lang.CharSequence,encoding:java.nio.charset.Charset,algorithm:java.security.MessageDigest):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='168.000'
                          class='abstract static'>+ create(data:java.io.File,algorithm:java.security.MessageDigest):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='179.000'
                          class='abstract static'>+ create(data:java.nio.file.Path,algorithm:java.security.MessageDigest):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='190.000'
                          class='abstract static'>+ from(hashValue:byte[]):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='201.000'
                          class='abstract static'>+ from(hashValue:java.lang.CharSequence):org.tquadrat.foundation.util.Hash</text>
                    <text x='5.000'
                          y='212.000'>&#x2A22; number():java.math.BigInteger</text>
                    <text x='5.000'
                          y='223.000'>&#x2A22; validate(hashValue:byte[]):boolean</text>
                    <text x='5.000'
                          y='234.000'>&#x2A22; validate(hashValue:long):boolean</text>
                    <text x='5.000'
                          y='245.000'>&#x2A22; validate(hashValue:java.lang.CharSequence):boolean</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000004'>
            <rect class='externalClass'
                  height='62.000'
                  width='76.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Cloneable'>
            <g>
                <g clip-path='url(#ID000004)'>
                    <rect x='0.000'
                          y='0.000'
                          width='76.000'
                          height='62.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='76.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='11.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='11.000'
                          y='24.000'
                          class='abstract'>Cloneable</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='76.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'/>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000005'>
            <rect class='externalClass'
                  height='62.000'
                  width='82.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.io.Serializable'>
            <g>
                <g clip-path='url(#ID000005)'>
                    <rect x='0.000'
                          y='0.000'
                          width='82.000'
                          height='62.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='28.000'
                          x2='82.000'
                          y2='28.000'
                          class='separator'/>
                    <text x='14.600'
                          y='13.000'
                          class='stereotype'>&#xAB;Interface&#xBB;</text>
                    <text x='5.000'
                          y='24.000'
                          class='abstract'>Serializable</text>
                    <line x1='0.000'
                          y1='45.000'
                          x2='82.000'
                          y2='45.000'
                          class='separator'/>
                    <text x='5.000'
                          y='41.000'/>
                    <text x='5.000'
                          y='58.000'/>
                </g>
            </g>
        </symbol>
    </defs>
    <path class='inheritance'
          d='M484.000,646.000 c0.000,-434.000,-331.000,0.000,-331.000,-434.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='implementation'
          d='M434.000,646.000 c0.000,-85.000,25.000,0.000,25.000,-85.000 v-15'
          marker-end='url(#implementation)'/>
    <path class='inheritance'
          d='M434.000,297.000 c0.000,-195.000,25.000,0.000,25.000,-195.000 v-15'
          marker-end='url(#inheritance)'/>
    <path class='inheritance'
          d='M484.000,297.000 c0.000,-195.000,281.000,0.000,281.000,-195.000 v-15'
          marker-end='url(#inheritance)'/>
    <use x='31.000'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='421.000'
         y='25.000'
         xlink:href='#java.lang.Cloneable'/>
    <use x='724.000'
         y='25.000'
         xlink:href='#java.io.Serializable'/>
    <use x='25.000'
         y='297.000'
         xlink:href='#org.tquadrat.foundation.util.Hash'/>
    <use x='136.000'
         y='646.000'
         xlink:href='#org.tquadrat.foundation.util.internal.HashImpl'/>
</svg>