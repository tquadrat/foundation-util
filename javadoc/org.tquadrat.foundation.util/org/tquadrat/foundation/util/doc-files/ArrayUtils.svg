
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:cc="http://creativecommons.org/ns#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:svg="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version='1.1'
     baseProfile='full'
     width='576.000'
     height='803.000'>
    <defs>
        <style><![CDATA[
            line
            {
              stroke: black;
            }
            line.separator
            {
              stroke:       black;
              stroke-width: 1;
            }
            marker
            {
              fill: white;
            }
            path
            {
              fill:   white;
              stroke: black;
            }
            path.implementation
            {
              fill:             none;
              stroke-dasharray: 5,5;
              stroke-width:     3;
            }
            path.inheritance
            {
              fill:         none;
              stroke-width: 3;
            }
            rect
            {
              fill:         none;
              stroke:       black;
              stroke-width: 2;
            }
            rect.externalClass
            {
              fill:         #D0D0D0;
              fill-opacity: 0.8;
            }
            rect.focusClass
            {
              fill:         #FFFFF9;
              fill-opacity: 0.8;
            }
            rect.otherClass
            {
              fill:         #F0E68C;
              fill-opacity: 0.8;
            }
            rect.template
            {
              fill:             #FFFFFF;
              fill-opacity:     1.0;
              stroke-dasharray: 3,3;
            }
            text
            {
              font-family: monospace;
              font-size:   10px;
              font-weight: bold;
            }
            text.abstract
            {
              font-style: italic;
            }
            text.final
            {
              text-decoration: underline;
            }
            text.static
            {
              font-weight: normal;
            }
            text.stereotype
            {
              font-size:   8px;
              font-weight: normal;
            }
            ]]></style>
        <marker id='inheritance'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <marker id='implementation'
                viewBox='0,0,40,40'
                markerUnits='strokeWidth'
                refX='40'
                refY='20'
                markerWidth='6'
                markerHeight='6'
                orient='auto'>
            <path d='M40,20 l-40,-20 v40 Z'
                  fill='#ffffff'
                  stroke='#000000'
                  stroke-width='3'/>
        </marker>
        <clipPath id='ID000001'>
            <rect class='focusClass'
                  height='381.000'
                  width='526.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='org.tquadrat.foundation.util.ArrayUtils'>
            <g>
                <g class='focusClass'
                   clip-path='url(#ID000001)'>
                    <rect x='0.000'
                          y='0.000'
                          width='526.000'
                          height='381.000'
                          class='focusClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='526.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='233.000'
                          y='13.000'>ArrayUtils</text>
                    <line x1='0.000'
                          y1='56.000'
                          x2='526.000'
                          y2='56.000'
                          class='separator'/>
                    <text y='30.000'
                          class='static final'>+ MSG_IllegalIndex:java.lang.String</text>
                    <text y='41.000'
                          class='static final'>+ MSG_NoArray:java.lang.String</text>
                    <text y='52.000'
                          class='static final'>+ MSG_NoValues:java.lang.String</text>
                    <text x='5.000'
                          y='69.000'>- ArrayUtils()</text>
                    <text x='5.000'
                          y='80.000'
                          class='static'>+ toObjectArray(array:java.lang.Object):java.lang.Object[]</text>
                    <text x='5.000'
                          y='91.000'
                          class='static'>+ isComparableIn(o:java.lang.Comparable&lt;? super T&gt;,list:T&#x2026;):boolean</text>
                    <text x='5.000'
                          y='102.000'
                          class='static'>+ isEqualIn(o:T,list:T&#x2026;):boolean</text>
                    <text x='5.000'
                          y='113.000'
                          class='static'>+ isIn(o:T,list:T&#x2026;):boolean</text>
                    <text x='5.000'
                          y='124.000'
                          class='static'>+ isIn(v:byte,list:byte&#x2026;):boolean</text>
                    <text x='5.000'
                          y='135.000'
                          class='static'>+ isIn(v:char,list:char&#x2026;):boolean</text>
                    <text x='5.000'
                          y='146.000'
                          class='static'>+ isIn(v:double,list:double&#x2026;):boolean</text>
                    <text x='5.000'
                          y='157.000'
                          class='static'>+ isIn(v:float,list:float&#x2026;):boolean</text>
                    <text x='5.000'
                          y='168.000'
                          class='static'>+ isIn(v:int,list:int&#x2026;):boolean</text>
                    <text x='5.000'
                          y='179.000'
                          class='static'>+ isIn(v:long,list:long&#x2026;):boolean</text>
                    <text x='5.000'
                          y='190.000'
                          class='static'>+ isIn(v:short,list:short&#x2026;):boolean</text>
                    <text x='5.000'
                          y='201.000'
                          class='static'>+ max(comparator:java.util.Comparator&lt;? super T&gt;,list:T&#x2026;):T</text>
                    <text x='5.000'
                          y='212.000'
                          class='static'>+ max(list:T&#x2026;):T</text>
                    <text x='5.000'
                          y='223.000'
                          class='static'>+ max(list:char&#x2026;):char</text>
                    <text x='5.000'
                          y='234.000'
                          class='static'>+ max(list:double&#x2026;):double</text>
                    <text x='5.000'
                          y='245.000'
                          class='static'>+ max(list:int&#x2026;):int</text>
                    <text x='5.000'
                          y='256.000'
                          class='static'>+ max(list:long&#x2026;):long</text>
                    <text x='5.000'
                          y='267.000'
                          class='static'>+ min(comparator:java.util.Comparator&lt;? super T&gt;,list:T&#x2026;):T</text>
                    <text x='5.000'
                          y='278.000'
                          class='static'>+ min(list:T&#x2026;):T</text>
                    <text x='5.000'
                          y='289.000'
                          class='static'>+ min(list:char&#x2026;):char</text>
                    <text x='5.000'
                          y='300.000'
                          class='static'>+ min(list:double&#x2026;):double</text>
                    <text x='5.000'
                          y='311.000'
                          class='static'>+ min(list:int&#x2026;):int</text>
                    <text x='5.000'
                          y='322.000'
                          class='static'>+ min(list:long&#x2026;):long</text>
                    <text x='5.000'
                          y='333.000'
                          class='static'>+ revert(a:T&#x2026;):void</text>
                    <text x='5.000'
                          y='344.000'
                          class='static'>+ revertCopy(a:T&#x2026;):T[]</text>
                    <text x='5.000'
                          y='355.000'
                          class='static'>+ subArray(source:T[],start:int,len:int):T[]</text>
                    <text x='5.000'
                          y='366.000'
                          class='static'>+ subArray(source:T[],start:int):T[]</text>
                    <text x='5.000'
                          y='377.000'
                          class='static'>+ toString(array:java.lang.Object[],separator:java.lang.CharSequence):java.lang.String</text>
                </g>
            </g>
        </symbol>
        <clipPath id='ID000002'>
            <rect class='externalClass'
                  height='172.000'
                  width='244.000'
                  x='0.000'
                  y='0.000'/>
        </clipPath>
        <symbol id='java.lang.Object'>
            <g>
                <g clip-path='url(#ID000002)'>
                    <rect x='0.000'
                          y='0.000'
                          width='244.000'
                          height='172.000'
                          class='externalClass'/>
                    <line x1='0.000'
                          y1='17.000'
                          x2='244.000'
                          y2='17.000'
                          class='separator'/>
                    <text x='104.000'
                          y='13.000'>Object</text>
                    <line x1='0.000'
                          y1='34.000'
                          x2='244.000'
                          y2='34.000'
                          class='separator'/>
                    <text x='5.000'
                          y='30.000'/>
                    <text x='5.000'
                          y='47.000'>+ Object()</text>
                    <text x='5.000'
                          y='58.000'>+ getClass():java.lang.Class&lt;?&gt;</text>
                    <text x='5.000'
                          y='69.000'>+ hashCode():int</text>
                    <text x='5.000'
                          y='80.000'>+ equals(arg0:java.lang.Object):boolean</text>
                    <text x='5.000'
                          y='91.000'># clone():java.lang.Object</text>
                    <text x='5.000'
                          y='102.000'>+ toString():java.lang.String</text>
                    <text x='5.000'
                          y='113.000'>+ notify():void</text>
                    <text x='5.000'
                          y='124.000'>+ notifyAll():void</text>
                    <text x='5.000'
                          y='135.000'>+ wait():void</text>
                    <text x='5.000'
                          y='146.000'>+ wait(arg0:long):void</text>
                    <text x='5.000'
                          y='157.000'>+ wait(arg0:long,arg1:int):void</text>
                    <text x='5.000'
                          y='168.000'># finalize():void</text>
                </g>
            </g>
        </symbol>
    </defs>
    <path class='inheritance'
          d='M288.000,297.000 L288.000,197.000'
          marker-end='url(#inheritance)'/>
    <use x='166.000'
         y='25.000'
         xlink:href='#java.lang.Object'/>
    <use x='25.000'
         y='297.000'
         xlink:href='#org.tquadrat.foundation.util.ArrayUtils'/>
</svg>